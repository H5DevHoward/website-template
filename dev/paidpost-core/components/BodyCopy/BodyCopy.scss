@import "~nytpi-sass-utils/size-class";
@import "~nytpi-sass-utils/font-size";

// Note: Using @1x scale factor
@include set-pspx-ratio(1);

// Begin Variables

$articleFontSize: 14;
$articleLineHeight: 28;
$articleMobileFontSize: 14;
$articleFontWeight: 300;

$h3FontSize: 36;
$h3LineHeight: 40;
$h3MobileFontSize: 30;
$h3FontWeight: 700;
// Measured and adjusted with 72 dpi non-antialiased PNG image exported from InDesign,
// overlaid on Safari 9.1.2 with the xScope Overlay tool on a @1x screen.
$h3MarginTop: 16 + 12;
$h3MarginBottom: 8;

// End Variables

.BodyCopy {
  font-weight: $articleFontWeight;
  position: relative;
  z-index: 2;

  @include size-class(all-desktop) {
    @include font-size($articleFontSize, vw, $articleMobileFontSize) {
      line-height: em($articleLineHeight);
    }
  }

  // Default Paragraph Margin
  & > p {
    margin-top: 0;
    margin-bottom: em($articleFontSize, $articleFontSize);
  }

  & > p:last-child {
    margin-bottom: 0;
  }

  // Default Subhead Size and Margins
  // TODO: Possibly expose as a (non-nested?) Sass class selector for standalone reusability
  & > h3 {
    font-weight: $h3FontWeight;
    clear: both;

    @include size-class(all-desktop) {
      @include font-size($h3FontSize, vw, $h3FontSize) {
        line-height: em($h3LineHeight);
        margin-top: 0;
        margin-bottom: em($h3MarginBottom);
      }
    }

    @include size-class(tablet-portrait to mobile-portrait) {
      @include font-size($h3FontSize, vw, $h3MobileFontSize, $h3FontSize);
    }
  }
  //////////////
  // END TODO //
  //////////////

  margin-left: auto;
  margin-right: auto;

  @include size-class(desktop for desktop to tablet-landscape) {
    width: span(6);
  }

  @include size-class(tablet-portrait for desktop to tablet-landscape) {
    min-width: span(6) / 100% * get-pspx-width(min px) * (100% - get-outer-margin() * 2) / 100%;
  }

  @include size-class(tablet-portrait) {
    width: span(6);
  }

  @include size-class(mobile-portrait for tablet-portrait) {
    min-width: span(4) / 100% * get-pspx-width(min px) * (100% - get-outer-margin() * 2) / 100%;
  }

  @include size-class(mobile-portrait) {
    width: span(4);
  }
}

.BodyCopy > h3:not(:first-child) {
  // Add a top margin for <h3> elements following a <p>
  margin-top: em($h3MarginTop, $h3FontSize);
}

// TODO: fix for mobile-portrait when followed by a floating LayoutContainer
.BodyCopy:not(:last-child) > p:last-child {
  margin-bottom: em($h3MarginTop, $articleFontSize);
}
